#! /usr/bin/env python
import irclib
import ircbot
import time
import sys
import thread

class Bot(ircbot.SingleServerIRCBot):
    def __init__ (self, channel, nick, server, port, password, name):
        ircbot.SingleServerIRCBot.__init__(self, [(server,port)], nick, name, 10)
        self.nick = nick
        self.channel = channel
        self.password = password
        self.currentHour = self.getHour()
        self.currentMin = self.getMin() #sets current hour and minute, minute doesn't do anything right now
        thread.start_new_thread(self.wait, ()) #listens for the time change in a separate thread so we can listen for input as well
        self.array = []
        self.message = '' #message for the .time command
    def getHour(self):
        theTime = time.gmtime()#does things for GMT
        longHour = theTime.tm_hour #using this because I am far more comfortable with C than I am with Python
        shortHour = longHour % 12
        shortHour += 1 #>Daylight savings time
        return shortHour
    def on_kick(self, c, e):
        kickedNick = e.arguments()[0]
        channel = e.target
        if kickedNick == self.nick:
            time.sleep(10)
            self.connection.join(self.channel) #rejoins 10 seconds after kick
    def getMin(self):
        theTime = time.gmtime()
        return theTime.tm_min
    
    def get_version(self):
        return "BIGBEN BOT"

    def wait(self): #sounds off the hour
        message = ''
        while 1:
            if self.currentHour != self.getHour():
                self.currentHour = self.getHour() #makes it so the bongs only go off once
                for i in range (0, self.currentHour):
                    message += 'BONG '
                self.connection.privmsg(self.channel, message)
                message = '' #resets the message
            time.sleep(1) #only checks once a second to greatly reduce CPU usage
    def on_welcome(self, connection, event):
        connection.join(self.channel)
        self.connection.privmsg("nickserv", "identify "+self.password) #idntify with nickserv
    def on_pubmsg (self, connection, event):
        source = event.source().split ('.')[0]
        if event.arguments() [0] == '.time':
            self.array.append('OI IT\'S ')
            self.array.append(str(self.getHour()))
            self.array.append(' BONG')
            self.message = ''.join(self.array)
            self.connection.privmsg(self.channel, self.message)
            self.message = ''
            self.array = [] #say OI IT'S x BONG
    

def main():
    if len(sys.argv) != 6:
        print "Usage: BigBen <network[:port]> <channel> <nickname> <password> <ircname>" #prints usage
        sys.exit(1)

    s = sys.argv[1].split(":", 1)
    network = s[0]
    if len(s) == 2:
        try:
            port = int(s[1])
        except ValueError:
            print "Error: Erroneous port."
            sys.exit(1) #splits server and port
    else:
        port = 6667
    channel = sys.argv[2] #what channel, # is required
    nick = sys.argv[3] #nick
    password = sys.argv[4] #nickserv password
    name = sys.argv[5] #ircname
    bot = Bot(channel, nick, network, port, password, name)
    bot.start()

if __name__ == "__main__":
    main()
